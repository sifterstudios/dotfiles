# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 4
inner.vertical = 4
outer.left = 4
outer.bottom = 4
outer.right = 4
outer.top = 4

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

alt-enter = '''exec-and-forget osascript -e '
tell application "Ghostty"
    do script
    activate
end tell'
'''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-backslash = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-minus = 'resize smart -50'
alt-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-a = 'workspace media'  # In your config, you can drop workspace bindings that you don't need
alt-o = 'workspace social'
alt-e = 'workspace web'
alt-u = 'workspace code'
alt-i = 'workspace other'

# For internal keyboard
alt-s = 'workspace social'
alt-d = 'workspace web'
alt-f = 'workspace code'
alt-g = 'workspace other'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-a = 'move-node-to-workspace media'
alt-shift-o = 'move-node-to-workspace social'
alt-shift-e = 'move-node-to-workspace web'
alt-shift-u = 'move-node-to-workspace code'
alt-shift-i = 'move-node-to-workspace other'

# For internal keyboard
alt-shift-s = 'move-node-to-workspace social'
alt-shift-d = 'move-node-to-workspace web'
alt-shift-f = 'move-node-to-workspace code'
alt-shift-g = 'move-node-to-workspace other'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']


[[on-window-detected]]
if.app-name-regex-substring = 'System Settings'
run = ['layout floating']

[[on-window-detected]]
if.app-name-regex-substring = 'Calculator'
run = ['layout floating']

[[on-window-detected]]
if.app-name-regex-substring = 'Karabiner-Elements'
run = ['layout floating']

[[on-window-detected]]
if.app-name-regex-substring = 'Yoink'
run = ['layout floating']

[[on-window-detected]]
if.app-name-regex-substring = 'Amphetamine'
run = ['layout floating']

[[on-window-detected]]
if.app-name-regex-substring = 'Ghostty'
run = ['move-node-to-workspace code']

[[on-window-detected]]
if.app-name-regex-substring = 'Cursor'
run = ['move-node-to-workspace code']

[[on-window-detected]]
if.app-name-regex-substring = 'Warp'
run = ['move-node-to-workspace code']

[[on-window-detected]]
if.app-name-regex-substring = 'kitty'
run = ['move-node-to-workspace code']

[[on-window-detected]]
if.app-name-regex-substring = 'Jetbrains Rider'
run = ['move-node-to-workspace code']

[[on-window-detected]]
if.app-name-regex-substring = 'RustRover'
run = ['move-node-to-workspace code']

[[on-window-detected]]
if.app-name-regex-substring = 'Xcode'
run = ['move-node-to-workspace code']

[[on-window-detected]]
if.app-name-regex-substring = 'Code'
run = ['move-node-to-workspace code']

[[on-window-detected]]
if.app-name-regex-substring = 'WebStorm'
run = ['move-node-to-workspace code']

[[on-window-detected]]
if.app-name-regex-substring = 'Safari'
run = ['move-node-to-workspace web']

[[on-window-detected]]
if.app-name-regex-substring = 'Firefox'
run = ['move-node-to-workspace web']

[[on-window-detected]]
if.app-name-regex-substring = 'Vivaldi'
run = ['move-node-to-workspace web']

[[on-window-detected]]
if.app-name-regex-substring = 'Brave Browser'
run = ['move-node-to-workspace web']

[[on-window-detected]]
if.app-name-regex-substring = 'Chrome'
run = ['move-node-to-workspace web']

[[on-window-detected]]
if.app-name-regex-substring = 'Arc'
run = ['move-node-to-workspace web']

[[on-window-detected]]
if.app-name-regex-substring = 'Slack'
run = ['move-node-to-workspace social']

[[on-window-detected]]
if.app-name-regex-substring = 'Discord'
run = ['move-node-to-workspace social']

[[on-window-detected]]
if.app-name-regex-substring = 'Messages'
run = ['move-node-to-workspace social']

[[on-window-detected]]
if.app-name-regex-substring = 'FaceTime'
run = ['move-node-to-workspace social']

[[on-window-detected]]
if.app-name-regex-substring = 'Microsoft Teams'
run = ['move-node-to-workspace social']

[[on-window-detected]]
if.app-name-regex-substring = 'Mail'
run = ['move-node-to-workspace social']

[[on-window-detected]]
if.app-name-regex-substring = 'Calendar'
run = ['move-node-to-workspace social']

[[on-window-detected]]
if.app-name-regex-substring = 'Planner'
run = ['move-node-to-workspace social']

[[on-window-detected]]
if.app-name-regex-substring = 'Mailbird'
run = ['move-node-to-workspace social']

[[on-window-detected]]
if.app-name-regex-substring = 'Spark'
run = ['move-node-to-workspace social']

[[on-window-detected]]
if.app-name-regex-substring = 'Music'
run = ['move-node-to-workspace media']

[[on-window-detected]]
if.app-name-regex-substring = 'VLC'
run = ['move-node-to-workspace media']

[[on-window-detected]]
if.app-name-regex-substring = 'Spotify'
run = ['move-node-to-workspace media']

[[on-window-detected]]
if.app-name-regex-substring = 'Cyberduck'
run = ['move-node-to-workspace other']

[[on-window-detected]]
if.app-name-regex-substring = 'Postman'
run = ['move-node-to-workspace other']

[[on-window-detected]]
if.app-name-regex-substring = 'Obsidian'
run = ['move-node-to-workspace other']

[[on-window-detected]]
if.app-name-regex-substring = 'TextEdit'
run = ['move-node-to-workspace other']

[[on-window-detected]]
if.app-name-regex-substring = 'Notes'
run = ['move-node-to-workspace other']

[[on-window-detected]]
if.app-name-regex-substring = 'Godot'
run = ['move-node-to-workspace other']
